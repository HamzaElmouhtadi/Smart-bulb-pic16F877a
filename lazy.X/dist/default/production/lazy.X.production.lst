

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 14 14:51:52 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F876A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  000A                     	;# 
   114  000B                     	;# 
   115  000C                     	;# 
   116  000D                     	;# 
   117  000E                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001B                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  0081                     	;# 
   139  0085                     	;# 
   140  0086                     	;# 
   141  0087                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  001A                     _RCREG	set	26
   162  0019                     _TXREG	set	25
   163  0033                     _RB3	set	51
   164  0032                     _RB2	set	50
   165  0065                     _RCIF	set	101
   166  00C1                     _OERR	set	193
   167  0064                     _TXIF	set	100
   168  00C6                     _RX9	set	198
   169  00C4                     _CREN	set	196
   170  00C7                     _SPEN	set	199
   171  0099                     _SPBRG	set	153
   172  0432                     _TRISB2	set	1074
   173  0433                     _TRISB3	set	1075
   174  04C6                     _TX9	set	1222
   175  04C5                     _TXEN	set	1221
   176  04C4                     _SYNC	set	1220
   177  04C2                     _BRGH	set	1218
   178  043F                     _TRISC7	set	1087
   179  043E                     _TRISC6	set	1086
   180                           
   181                           	psect	strings
   182  0003                     __pstrings:
   183  0003                     stringtab:
   184  0003                     __stringtab:
   185  0003                     stringcode:	
   186                           ;	String table - string pointers are 1 byte each
   187                           
   188  0003                     stringdir:
   189  0003  3000               	movlw	high stringdir
   190  0004  008A               	movwf	10
   191  0005  0804               	movf	4,w
   192  0006  0A84               	incf	4,f
   193  0007  0782               	addwf	2,f
   194  0008                     __stringbase:
   195  0008  3400               	retlw	0
   196  0009                     __end_of__stringtab:
   197  0009                     STR_1:
   198  0009  3455               	retlw	85	;'U'
   199  000A  3441               	retlw	65	;'A'
   200  000B  3452               	retlw	82	;'R'
   201  000C  3454               	retlw	84	;'T'
   202  000D  3420               	retlw	32	;' '
   203  000E  344D               	retlw	77	;'M'
   204  000F  346F               	retlw	111	;'o'
   205  0010  3464               	retlw	100	;'d'
   206  0011  3475               	retlw	117	;'u'
   207  0012  346C               	retlw	108	;'l'
   208  0013  3465               	retlw	101	;'e'
   209  0014  3420               	retlw	32	;' '
   210  0015  3449               	retlw	73	;'I'
   211  0016  346E               	retlw	110	;'n'
   212  0017  3469               	retlw	105	;'i'
   213  0018  3474               	retlw	116	;'t'
   214  0019  3469               	retlw	105	;'i'
   215  001A  3461               	retlw	97	;'a'
   216  001B  346C               	retlw	108	;'l'
   217  001C  3469               	retlw	105	;'i'
   218  001D  347A               	retlw	122	;'z'
   219  001E  3465               	retlw	101	;'e'
   220  001F  3464               	retlw	100	;'d'
   221  0020  3420               	retlw	32	;' '
   222  0021  3461               	retlw	97	;'a'
   223  0022  346E               	retlw	110	;'n'
   224  0023  3464               	retlw	100	;'d'
   225  0024  3420               	retlw	32	;' '
   226  0025  3461               	retlw	97	;'a'
   227  0026  3463               	retlw	99	;'c'
   228  0027  3474               	retlw	116	;'t'
   229  0028  3469               	retlw	105	;'i'
   230  0029  3476               	retlw	118	;'v'
   231  002A  3465               	retlw	101	;'e'
   232  002B  3400               	retlw	0
   233  002C                     STR_2:
   234  002C  3452               	retlw	82	;'R'
   235  002D  3445               	retlw	69	;'E'
   236  002E  3444               	retlw	68	;'D'
   237  002F  3420               	retlw	32	;' '
   238  0030  344C               	retlw	76	;'L'
   239  0031  3445               	retlw	69	;'E'
   240  0032  3444               	retlw	68	;'D'
   241  0033  3420               	retlw	32	;' '
   242  0034  342D               	retlw	45	;'-'
   243  0035  343E               	retlw	62	;'>'
   244  0036  3420               	retlw	32	;' '
   245  0037  344F               	retlw	79	;'O'
   246  0038  344E               	retlw	78	;'N'
   247  0039  3400               	retlw	0
   248  003A                     STR_3:
   249  003A  3452               	retlw	82	;'R'
   250  003B  3445               	retlw	69	;'E'
   251  003C  3444               	retlw	68	;'D'
   252  003D  3420               	retlw	32	;' '
   253  003E  342D               	retlw	45	;'-'
   254  003F  343E               	retlw	62	;'>'
   255  0040  3420               	retlw	32	;' '
   256  0041  344F               	retlw	79	;'O'
   257  0042  3446               	retlw	70	;'F'
   258  0043  3446               	retlw	70	;'F'
   259  0044  3400               	retlw	0
   260                           
   261                           	psect	cinit
   262  07FC                     start_initialization:	
   263                           ; #config settings
   264                           
   265  07FC                     __initialization:
   266  07FC                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269  07FC                     __end_of__initialization:
   270  07FC  0183               	clrf	3
   271  07FD  120A  118A  2FA5   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	cstackCOMMON
   274  0070                     __pcstackCOMMON:
   275  0070                     ?_Initialize_UART:
   276  0070                     ??_Initialize_UART:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_UART_send_char:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ??_UART_send_char:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_UART_get_char:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ??_UART_get_char:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_UART_send_string:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     UART_send_char@bt:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 1 bytes @ 0x0
   302  0070                     	ds	1
   303  0071                     ??_UART_send_string:
   304                           
   305                           ; 1 bytes @ 0x1
   306  0071                     	ds	1
   307  0072                     UART_send_string@st_pt:
   308                           
   309                           ; 1 bytes @ 0x2
   310  0072                     	ds	1
   311  0073                     ??_main:
   312                           
   313                           ; 1 bytes @ 0x3
   314  0073                     	ds	2
   315  0075                     main@get_value:
   316                           
   317                           ; 2 bytes @ 0x5
   318  0075                     	ds	2
   319                           
   320                           	psect	maintext
   321  07A5                     __pmaintext:	
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 79 in file "newfile.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  flag            2    0        int 
   332 ;;  get_value       2    5[COMMON] int 
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : B00/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         2       0       0       0       0
   344 ;;      Temps:          2       0       0       0       0
   345 ;;      Totals:         4       0       0       0       0
   346 ;;Total ram usage:        4 bytes
   347 ;; Hardware stack levels required when called: 2
   348 ;; This function calls:
   349 ;;		_Initialize_UART
   350 ;;		_UART_get_char
   351 ;;		_UART_send_char
   352 ;;		_UART_send_string
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           
   359                           ;psect for function _main
   360  07A5                     _main:
   361  07A5                     l758:	
   362                           ;incstack = 0
   363                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   364                           
   365  07A5                     l760:
   366                           
   367                           ;newfile.c: 83:     TRISB3 = 0;
   368  07A5  1683               	bsf	3,5	;RP0=1, select bank1
   369  07A6  1303               	bcf	3,6	;RP1=0, select bank1
   370  07A7  1186               	bcf	6,3	;volatile
   371  07A8                     l762:
   372                           
   373                           ;newfile.c: 84:     TRISB2 = 1;
   374  07A8  1506               	bsf	6,2	;volatile
   375  07A9                     l764:
   376                           
   377                           ;newfile.c: 85:     RB2=0;
   378  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   379  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   380  07AB  1106               	bcf	6,2	;volatile
   381  07AC                     l766:
   382                           
   383                           ;newfile.c: 86:       if (RB2 == 1)
   384  07AC  1D06               	btfss	6,2	;volatile
   385  07AD  2FAF               	goto	u101
   386  07AE  2FB0               	goto	u100
   387  07AF                     u101:
   388  07AF  2FB2               	goto	l65
   389  07B0                     u100:
   390  07B0                     l768:
   391  07B0                     l770:	
   392                           ;newfile.c: 87:       {;newfile.c: 88:           if(flag==0)
   393                           
   394                           
   395                           ;newfile.c: 89:       {;newfile.c: 90:           RB3 = 0;
   396  07B0  1186               	bcf	6,3	;volatile
   397  07B1                     l772:
   398                           
   399                           ;newfile.c: 92:       }
   400  07B1  2FF9               	goto	l76
   401  07B2                     l65:	
   402                           ;newfile.c: 99:       else if (RB2 == 0)
   403                           
   404  07B2  1906               	btfsc	6,2	;volatile
   405  07B3  2FB5               	goto	u111
   406  07B4  2FB6               	goto	u110
   407  07B5                     u111:
   408  07B5  2FF9               	goto	l76
   409  07B6                     u110:
   410  07B6                     l780:
   411                           
   412                           ;newfile.c: 100:       {;newfile.c: 101:     Initialize_UART();
   413  07B6  120A  118A  276E  120A  118A  	fcall	_Initialize_UART
   414  07BB                     l782:
   415                           
   416                           ;newfile.c: 103:     UART_send_string("UART Module Initialized and active");
   417  07BB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   418  07BC  120A  118A  2786  120A  118A  	fcall	_UART_send_string
   419  07C1                     l784:
   420                           
   421                           ;newfile.c: 106:     {;newfile.c: 107:       get_value = UART_get_char();
   422  07C1  120A  118A  2760  120A  118A  	fcall	_UART_get_char
   423  07C6  00F3               	movwf	??_main
   424  07C7  01F4               	clrf	??_main+1
   425  07C8  0873               	movf	??_main,w
   426  07C9  00F5               	movwf	main@get_value
   427  07CA  0874               	movf	??_main+1,w
   428  07CB  00F6               	movwf	main@get_value+1
   429  07CC                     l786:
   430                           
   431                           ;newfile.c: 109:         if (get_value == '1')
   432  07CC  3031               	movlw	49
   433  07CD  0675               	xorwf	main@get_value,w
   434  07CE  0476               	iorwf	main@get_value+1,w
   435  07CF  1D03               	btfss	3,2
   436  07D0  2FD2               	goto	u121
   437  07D1  2FD3               	goto	u120
   438  07D2                     u121:
   439  07D2  2FE2               	goto	l794
   440  07D3                     u120:
   441  07D3                     l788:
   442                           
   443                           ;newfile.c: 110:         {;newfile.c: 111:             RB3=1;
   444  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   445  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   446  07D5  1586               	bsf	6,3	;volatile
   447  07D6                     l790:
   448                           
   449                           ;newfile.c: 112:             UART_send_string("RED LED -> ON");
   450  07D6  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   451  07D7  120A  118A  2786  120A  118A  	fcall	_UART_send_string
   452  07DC                     l792:
   453                           
   454                           ;newfile.c: 113:             UART_send_char(10);
   455  07DC  300A               	movlw	10
   456  07DD  120A  118A  2756  120A  118A  	fcall	_UART_send_char
   457  07E2                     l794:
   458                           
   459                           ;newfile.c: 116:         if (get_value == '0')
   460  07E2  3030               	movlw	48
   461  07E3  0675               	xorwf	main@get_value,w
   462  07E4  0476               	iorwf	main@get_value+1,w
   463  07E5  1D03               	btfss	3,2
   464  07E6  2FE8               	goto	u131
   465  07E7  2FE9               	goto	u130
   466  07E8                     u131:
   467  07E8  2FC1               	goto	l784
   468  07E9                     u130:
   469  07E9                     l796:
   470                           
   471                           ;newfile.c: 117:         {;newfile.c: 118:            RB3=0;
   472  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   473  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   474  07EB  1186               	bcf	6,3	;volatile
   475  07EC                     l798:
   476                           
   477                           ;newfile.c: 119:            UART_send_string("RED -> OFF");
   478  07EC  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   479  07ED  120A  118A  2786  120A  118A  	fcall	_UART_send_string
   480  07F2                     l800:
   481                           
   482                           ;newfile.c: 120:            UART_send_char(10);
   483  07F2  300A               	movlw	10
   484  07F3  120A  118A  2756  120A  118A  	fcall	_UART_send_char
   485  07F8  2FC1               	goto	l784
   486  07F9                     l76:
   487  07F9  120A  118A  2800   	ljmp	start
   488  07FC                     __end_of_main:
   489                           
   490                           	psect	text1
   491  0786                     __ptext1:	
   492 ;; *************** function _UART_send_string *****************
   493 ;; Defined at:
   494 ;;		line 71 in file "newfile.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  st_pt           1    wreg     PTR unsigned char 
   497 ;;		 -> STR_3(11), STR_2(14), STR_1(35), 
   498 ;; Auto vars:     Size  Location     Type
   499 ;;  st_pt           1    2[COMMON] PTR unsigned char 
   500 ;;		 -> STR_3(11), STR_2(14), STR_1(35), 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         1       0       0       0       0
   512 ;;      Temps:          1       0       0       0       0
   513 ;;      Totals:         2       0       0       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; Hardware stack levels required when called: 1
   517 ;; This function calls:
   518 ;;		_UART_send_char
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _UART_send_string
   526  0786                     _UART_send_string:
   527                           
   528                           ;incstack = 0
   529                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   530                           ;UART_send_string@st_pt stored from wreg
   531  0786  00F2               	movwf	UART_send_string@st_pt
   532  0787                     l750:
   533                           
   534                           ;newfile.c: 71: void UART_send_string(char* st_pt);newfile.c: 72: {;newfile.c: 73:     w
      +                          hile(*st_pt)
   535  0787  2F98               	goto	l756
   536  0788                     l752:
   537                           
   538                           ;newfile.c: 74:         UART_send_char(*st_pt++);
   539  0788  0872               	movf	UART_send_string@st_pt,w
   540  0789  0084               	movwf	4
   541  078A  120A  118A  2003  120A  118A  	fcall	stringdir
   542  078F  120A  118A  2756  120A  118A  	fcall	_UART_send_char
   543  0794                     l754:
   544  0794  3001               	movlw	1
   545  0795  00F1               	movwf	??_UART_send_string
   546  0796  0871               	movf	??_UART_send_string,w
   547  0797  07F2               	addwf	UART_send_string@st_pt,f
   548  0798                     l756:
   549                           
   550                           ;newfile.c: 73:     while(*st_pt)
   551  0798  0872               	movf	UART_send_string@st_pt,w
   552  0799  0084               	movwf	4
   553  079A  120A  118A  2003  120A  118A  	fcall	stringdir
   554  079F  3A00               	xorlw	0
   555  07A0  1D03               	skipz
   556  07A1  2FA3               	goto	u91
   557  07A2  2FA4               	goto	u90
   558  07A3                     u91:
   559  07A3  2F88               	goto	l752
   560  07A4                     u90:
   561  07A4                     l60:
   562  07A4  0008               	return
   563  07A5                     __end_of_UART_send_string:
   564                           
   565                           	psect	text2
   566  0756                     __ptext2:	
   567 ;; *************** function _UART_send_char *****************
   568 ;; Defined at:
   569 ;;		line 48 in file "newfile.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  bt              1    wreg     unsigned char 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  bt              1    0[COMMON] unsigned char 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         0       0       0       0       0
   584 ;;      Locals:         1       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0
   586 ;;      Totals:         1       0       0       0       0
   587 ;;Total ram usage:        1 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_UART_send_string
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           
   598                           ;psect for function _UART_send_char
   599  0756                     _UART_send_char:
   600                           
   601                           ;incstack = 0
   602                           ; Regs used in _UART_send_char: [wreg]
   603                           ;UART_send_char@bt stored from wreg
   604  0756  00F0               	movwf	UART_send_char@bt
   605  0757                     l668:
   606  0757                     l44:	
   607                           ;newfile.c: 48: void UART_send_char(char bt);newfile.c: 49: {;newfile.c: 50:     while(!
      +                          TXIF);
   608                           
   609  0757  1283               	bcf	3,5	;RP0=0, select bank0
   610  0758  1303               	bcf	3,6	;RP1=0, select bank0
   611  0759  1E0C               	btfss	12,4	;volatile
   612  075A  2F5C               	goto	u11
   613  075B  2F5D               	goto	u10
   614  075C                     u11:
   615  075C  2F57               	goto	l44
   616  075D                     u10:
   617  075D                     l670:
   618                           
   619                           ;newfile.c: 51:     TXREG = bt;
   620  075D  0870               	movf	UART_send_char@bt,w
   621  075E  0099               	movwf	25	;volatile
   622  075F                     l47:
   623  075F  0008               	return
   624  0760                     __end_of_UART_send_char:
   625                           
   626                           	psect	text3
   627  0760                     __ptext3:	
   628 ;; *************** function _UART_get_char *****************
   629 ;; Defined at:
   630 ;;		line 56 in file "newfile.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      unsigned char 
   637 ;; Registers used:
   638 ;;		wreg
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _UART_get_char
   659  0760                     _UART_get_char:
   660  0760                     l690:	
   661                           ;incstack = 0
   662                           ; Regs used in _UART_get_char: [wreg]
   663                           
   664                           
   665                           ;newfile.c: 58:     if(OERR)
   666  0760  1283               	bcf	3,5	;RP0=0, select bank0
   667  0761  1303               	bcf	3,6	;RP1=0, select bank0
   668  0762  1C98               	btfss	24,1	;volatile
   669  0763  2F65               	goto	u21
   670  0764  2F66               	goto	u20
   671  0765                     u21:
   672  0765  2F68               	goto	l51
   673  0766                     u20:
   674  0766                     l692:
   675                           
   676                           ;newfile.c: 59:     {;newfile.c: 60:         CREN = 0;
   677  0766  1218               	bcf	24,4	;volatile
   678                           
   679                           ;newfile.c: 61:         CREN = 1;
   680  0767  1618               	bsf	24,4	;volatile
   681  0768                     l51:
   682  0768  1E8C               	btfss	12,5	;volatile
   683  0769  2F6B               	goto	u31
   684  076A  2F6C               	goto	u30
   685  076B                     u31:
   686  076B  2F68               	goto	l51
   687  076C                     u30:
   688  076C                     l694:
   689                           
   690                           ;newfile.c: 66:     return RCREG;
   691  076C  081A               	movf	26,w	;volatile
   692  076D                     l54:
   693  076D  0008               	return
   694  076E                     __end_of_UART_get_char:
   695                           
   696                           	psect	text4
   697  076E                     __ptext4:	
   698 ;; *************** function _Initialize_UART *****************
   699 ;; Defined at:
   700 ;;		line 17 in file "newfile.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0
   717 ;;      Totals:         0       0       0       0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used: 1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function _Initialize_UART
   729  076E                     _Initialize_UART:
   730  076E                     l672:	
   731                           ;incstack = 0
   732                           ; Regs used in _Initialize_UART: [wreg]
   733                           
   734                           
   735                           ;newfile.c: 20:     TRISC6 = 0;
   736  076E  1683               	bsf	3,5	;RP0=1, select bank1
   737  076F  1303               	bcf	3,6	;RP1=0, select bank1
   738  0770  1307               	bcf	7,6	;volatile
   739                           
   740                           ;newfile.c: 21:     TRISC7 = 1;
   741  0771  1787               	bsf	7,7	;volatile
   742  0772                     l674:
   743                           
   744                           ;newfile.c: 26:     SPBRG = ((20000000/16)/9600) - 1;
   745  0772  3081               	movlw	129
   746  0773  0099               	movwf	25	;volatile
   747  0774                     l676:
   748                           
   749                           ;newfile.c: 27:     BRGH = 1;
   750  0774  1518               	bsf	24,2	;volatile
   751  0775                     l678:
   752                           
   753                           ;newfile.c: 31:     SYNC = 0;
   754  0775  1218               	bcf	24,4	;volatile
   755  0776                     l680:
   756                           
   757                           ;newfile.c: 32:     SPEN = 1;
   758  0776  1283               	bcf	3,5	;RP0=0, select bank0
   759  0777  1303               	bcf	3,6	;RP1=0, select bank0
   760  0778  1798               	bsf	24,7	;volatile
   761  0779                     l682:
   762                           
   763                           ;newfile.c: 36:     TXEN = 1;
   764  0779  1683               	bsf	3,5	;RP0=1, select bank1
   765  077A  1303               	bcf	3,6	;RP1=0, select bank1
   766  077B  1698               	bsf	24,5	;volatile
   767  077C                     l684:
   768                           
   769                           ;newfile.c: 37:     CREN = 1;
   770  077C  1283               	bcf	3,5	;RP0=0, select bank0
   771  077D  1303               	bcf	3,6	;RP1=0, select bank0
   772  077E  1618               	bsf	24,4	;volatile
   773  077F                     l686:
   774                           
   775                           ;newfile.c: 41:     TX9 = 0;
   776  077F  1683               	bsf	3,5	;RP0=1, select bank1
   777  0780  1303               	bcf	3,6	;RP1=0, select bank1
   778  0781  1318               	bcf	24,6	;volatile
   779  0782                     l688:
   780                           
   781                           ;newfile.c: 42:     RX9 = 0;
   782  0782  1283               	bcf	3,5	;RP0=0, select bank0
   783  0783  1303               	bcf	3,6	;RP1=0, select bank0
   784  0784  1318               	bcf	24,6	;volatile
   785  0785                     l41:
   786  0785  0008               	return
   787  0786                     __end_of_Initialize_UART:
   788  007E                     btemp	set	126	;btemp
   789  007E                     wtemp0	set	126
   790                           
   791                           	psect	config
   792                           
   793                           ;Config register CONFIG @ 0x2007
   794                           ;	Oscillator Selection bits
   795                           ;	FOSC = HS, HS oscillator
   796                           ;	Watchdog Timer Enable bit
   797                           ;	WDTE = OFF, WDT disabled
   798                           ;	Power-up Timer Enable bit
   799                           ;	PWRTE = OFF, PWRT disabled
   800                           ;	Brown-out Reset Enable bit
   801                           ;	BOREN = ON, BOR enabled
   802                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   803                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   804                           ;	Data EEPROM Memory Code Protection bit
   805                           ;	CPD = OFF, Data EEPROM code protection off
   806                           ;	Flash Program Memory Write Enable bits
   807                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   808                           ;	In-Circuit Debugger Mode bit
   809                           ;	DEBUG = 0x1, unprogrammed default
   810                           ;	Flash Program Memory Code Protection bit
   811                           ;	CP = OFF, Code protection off
   812  2007                     	org	8199
   813  2007  3F7A               	dw	16250

Data Sizes:
    Strings     60
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 35
		 -> STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[35]), 


Critical Paths under _main in COMMON

    _main->_UART_send_string
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     266
                                              3 COMMON     4     4      0
                    _Initialize_UART
                      _UART_get_char
                     _UART_send_char
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     2      0     159
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_get_char                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_UART
   _UART_get_char
   _UART_send_char
   _UART_send_string
     _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 14 14:51:52 2022

                        pc 0002                         l41 0785                         l51 0768  
                       l44 0757                         l60 07A4                         l54 076D  
                       l47 075F                         l65 07B2                         l76 07F9  
                       u10 075D                         u11 075C                         u20 0766  
                       u21 0765                         u30 076C                         u31 076B  
                       u90 07A4                         u91 07A3                         fsr 0004  
                      l800 07F2                        l670 075D                        l750 0787  
                      l680 0776                        l672 076E                        l752 0788  
                      l760 07A5                        l682 0779                        l674 0772  
                      l690 0760                        l754 0794                        l770 07B0  
                      l762 07A8                        l684 077C                        l676 0774  
                      l692 0766                        l668 0757                        l756 0798  
                      l780 07B6                        l772 07B1                        l764 07A9  
                      l686 077F                        l678 0775                        l694 076C  
                      l790 07D6                        l782 07BB                        l766 07AC  
                      l758 07A5                        l688 0782                        l792 07DC  
                      l784 07C1                        l768 07B0                        l794 07E2  
                      l786 07CC                        l796 07E9                        l788 07D3  
                      l798 07EC                        _RB2 0032                        _RB3 0033  
                      u100 07B0                        u101 07AF                        u110 07B6  
                      u111 07B5                        u120 07D3                        u121 07D2  
                      u130 07E9                        u131 07E8                        _RX9 00C6  
                      _TX9 04C6                        fsr0 0004                       STR_1 0009  
                     STR_2 002C                       STR_3 003A                       _BRGH 04C2  
                     _CREN 00C4                       _RCIF 0065                       _OERR 00C1  
                     _SPEN 00C7                       _TXEN 04C5                       _TXIF 0064  
                     _SYNC 04C4                       _main 07A5                       btemp 007E  
                     start 0000  __size_of_UART_send_string 001F                      ?_main 0070  
                    _RCREG 001A                      _SPBRG 0099                      _TXREG 0019  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 07FC               __end_of_main 07FC                     ??_main 0073  
            main@get_value 0075                     _TRISB2 0432                     _TRISB3 0433  
                   _TRISC6 043E                     _TRISC7 043F    __end_of__initialization 07FC  
           __pcstackCOMMON 0070           _UART_send_string 0786   __size_of_Initialize_UART 0018  
    __end_of_UART_get_char 076E                 __pmaintext 07A5    __size_of_UART_send_char 000A  
               __stringtab 0003                    __ptext1 0786                    __ptext2 0756  
                  __ptext3 0760                    __ptext4 076E          ??_Initialize_UART 0070  
     end_of_initialization 07FC   __end_of_UART_send_string 07A5        start_initialization 07FC  
           _UART_send_char 0756     __end_of_UART_send_char 0760                  ___latbits 0002  
   __size_of_UART_get_char 000E            _Initialize_UART 076E           UART_send_char@bt 0070  
                __pstrings 0003            ?_UART_send_char 0070                __stringbase 0008  
    UART_send_string@st_pt 0072              _UART_get_char 0760          ?_UART_send_string 0070  
       ??_UART_send_string 0071    __end_of_Initialize_UART 0786         __end_of__stringtab 0009  
           ?_UART_get_char 0070              __size_of_main 0057           ?_Initialize_UART 0070  
                stringcode 0003           ??_UART_send_char 0070            ??_UART_get_char 0070  
                 stringdir 0003                   stringtab 0003  
